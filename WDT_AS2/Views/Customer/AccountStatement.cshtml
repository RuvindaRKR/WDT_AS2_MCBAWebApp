@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Common
@model IPagedList<Transaction>
@{
    ViewData["Title"] = "Statements";
    var customer = (Customer)ViewBag.Customer;
    var account = (Account)ViewBag.Account;
    var id = account.AccountNumber;
}

<div>
    <h1 class="display-4"> Statement for Account @account.AccountNumber (@account.AccountType)</h1>
    <div>
        Account Balance: $@account.Balance;
    </div>

    <h3>Your Transactions</h3>
    <div>
        <table class="table">
            <tr>
                <th>@Html.DisplayNameFor(x => Model[0].TransactionID):</th>
                <th>@Html.DisplayNameFor(x => Model[0].TransactionType):</th>
                <th>@Html.DisplayNameFor(x => Model[0].DestinationAccountNumber):</th>
                <th>@Html.DisplayNameFor(x => Model[0].Amount):</th>
                <th>@Html.DisplayNameFor(x => Model[0].Comment):</th>
            </tr>
            @foreach (var transaction in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(x => transaction.TransactionID)</td>
                    <td>@Html.DisplayFor(x => transaction.TransactionType)</td>
                    <td>@Html.DisplayFor(x => transaction.DestinationAccountNumber)</td>
                    <td>@Html.DisplayFor(x => transaction.Amount)</td>
                    <td>@Html.DisplayFor(x => transaction.Comment)</td>
                </tr>
            }
        </table>

        @Html.PagedListPager(Model, page => Url.Action("AccountStatments", new { id, page }),
            new PagedListRenderOptions
            {
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" }
            })
    </div>

    <div>
        <a asp-action="Statements">Back to Accounts</a>
    </div>