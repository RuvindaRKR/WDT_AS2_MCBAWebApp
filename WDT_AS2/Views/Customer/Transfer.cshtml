@model Account
@{
    ViewData["Title"] = "Transfer";
}

<h1 class="display-4">Account Number @Model.AccountNumber (@Model.AccountType)</h1>

<div class="row">
    
<div class="col-md-4">
        <form asp-action="Transfer">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label for="Amount" class="control-label">Transfer Account</label>
                <select id="transferAccount" name="AccountNumber" class="form-control" value="@ViewBag.transferAccount" asp-for="AccountNumber" asp-items="@ViewBag.AccountList" required>
                    <option value="">Select An Account</option>
                </select>
                @Html.ValidationMessage("AccountNumber", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="Amount" class="control-label">Amount</label>
                <input id="Amount" name="Amount" class="form-control" value="@ViewBag.Amount?.ToString("0.00")"
                    data-val="true" data-val-number="The field Amount must be a number."
                    data-val-required="The Amount field is required." />
                @Html.ValidationMessage("Amount", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="submit" value="Transfer" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to Accounts</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}